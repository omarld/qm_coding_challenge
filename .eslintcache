[{"D:\\devhome\\qm_coding_challenge\\src\\components\\SessionSearch.js":"1","D:\\devhome\\qm_coding_challenge\\src\\Lib\\Constants.js":"2","D:\\devhome\\qm_coding_challenge\\src\\components\\Row\\Row.js":"3","D:\\devhome\\qm_coding_challenge\\src\\components\\Dropdown\\Option\\Option.js":"4","D:\\devhome\\qm_coding_challenge\\src\\Services\\SqlService.js":"5","D:\\devhome\\qm_coding_challenge\\src\\components\\Dropdown\\Dropdown.js":"6","D:\\devhome\\qm_coding_challenge\\src\\store\\appReducer.js":"7","D:\\devhome\\qm_coding_challenge\\src\\index.js":"8"},{"size":565,"mtime":1608903187232,"results":"9","hashOfConfig":"10"},{"size":1035,"mtime":1608902724567,"results":"11","hashOfConfig":"10"},{"size":3045,"mtime":1609085373727,"results":"12","hashOfConfig":"10"},{"size":390,"mtime":1608912992272,"results":"13","hashOfConfig":"10"},{"size":1234,"mtime":1608917231687,"results":"14","hashOfConfig":"10"},{"size":4731,"mtime":1608916775291,"results":"15","hashOfConfig":"10"},{"size":487,"mtime":1608907612772,"results":"16","hashOfConfig":"10"},{"size":571,"mtime":1608734698831,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19tj54b",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\devhome\\qm_coding_challenge\\src\\components\\SessionSearch.js",["36"],"D:\\devhome\\qm_coding_challenge\\src\\Lib\\Constants.js",[],["37","38"],"D:\\devhome\\qm_coding_challenge\\src\\components\\Row\\Row.js",["39"],"import React, { useState, useEffect } from 'react';\nimport Dropdown from 'components/Dropdown/Dropdown';\n\nimport styles from './Row.module.scss';\n\nimport {getConditionByKey} from 'Services/SqlService';\n\nexport const Row = (props) =>{\n    const { conditions } = props;\n\n    const [selected, setSelected] = useState({});\n\n    useEffect(() =>{\n        const selected = {\n            condition: conditions[0],\n            selectedOperator: conditions[0].operators[0],\n            operators: conditions[0].operators\n        }\n        setSelected(selected);\n    }, []);\n\n    const onSelectHandler = (item) =>{\n        const condition = getConditionByKey(item.key);\n        const selected = {\n            condition,\n            selectedOperator: condition.operators[0],\n            operators: condition.operators\n        }\n        setSelected(selected);\n    }\n\n    const renderPrePostConditionTemplate = (condition, type) =>{\n        return (\n            <div>\n                {condition && <span className={styles.prePostCondition}>{condition}</span> }\n                {!condition && <input placeholder=\"some input\" type={type}/> }\n            </div>\n        )\n    }\n\n    const onOperatorSelectHandler = (item) =>{\n        console.log(item);\n        const temp = {\n            ...selected,\n            selectedOperator: item\n        }\n        console.log(temp);\n        setSelected(temp);\n    }\n\n    return(\n        <div className={styles.mainRow}>\n            <div className={styles.remove}>X</div>\n            <div>\n                <Dropdown \n                    options={conditions} \n                    defaultSelectedIndex={0}\n                    onSelectHandler={onSelectHandler}/>\n            </div>\n            {(selected.selectedOperator && selected.selectedOperator.preCondition) ? \n                renderPrePostConditionTemplate(selected.selectedOperator.preCondition, selected.condition.type) \n                : null\n            }\n            {(selected.operators && selected.operators.preCondition) ? \n                renderPrePostConditionTemplate() \n                : null\n            }\n            <Dropdown\n                options={selected.operators}\n                defaultSelectedIndex={0}\n                onSelectHandler={onOperatorSelectHandler}/>\n            {(selected.selectedOperator && selected.selectedOperator.postCondition) ? \n                <input placeholder=\"between input\" type={selected.condition.type}/> \n                : null\n            }\n\n            {(selected.selectedOperator && selected.selectedOperator.postCondition) ? \n                renderPrePostConditionTemplate(selected.selectedOperator.postCondition, selected.condition.type) \n                : null\n            }\n           \n            {(selected.operators && selected.operators.postCondition) ? \n                renderPrePostConditionTemplate() \n                : null\n            }\n\n            {selected.condition && <input placeholder=\"always input\" type={selected.condition.type}/> }\n            \n        </div>\n    )\n}\n\nexport default Row;","D:\\devhome\\qm_coding_challenge\\src\\components\\Dropdown\\Option\\Option.js",[],"D:\\devhome\\qm_coding_challenge\\src\\Services\\SqlService.js",[],"D:\\devhome\\qm_coding_challenge\\src\\components\\Dropdown\\Dropdown.js",[],"D:\\devhome\\qm_coding_challenge\\src\\store\\appReducer.js",[],"D:\\devhome\\qm_coding_challenge\\src\\index.js",[],{"ruleId":"40","severity":1,"message":"41","line":9,"column":5,"nodeType":"42","messageId":"43","endLine":11,"endColumn":6},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":20,"column":8,"nodeType":"50","endLine":20,"endColumn":10,"suggestions":"51"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'conditions'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [conditions]",{"range":"57","text":"58"},[559,561],"[conditions]"]